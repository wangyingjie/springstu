<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property resource="extend.properties"/>
    <property name="LOG_HOME" value="${log.path}"/>
    <property name="AppName" value="${app.name}"/>
    <!-- 控制台输出 解决logback问题-->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date %logger{60} %M [%thread] %-5level - %msg%n</pattern>
        </encoder>
    </appender>

    <!--时间滚动输出 level为 INFO 日志-->
    <appender name="file—info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_HOME}/${AppName}-info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/${AppName}-info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>10</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date %logger{60} %M [%thread] %-5level [%file : %line] - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="file—info-asyn" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="file—info"/>
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
    </appender>

    <!--时间滚动输出 level为 ERROR日志-->
    <appender name="file—error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_HOME}/${AppName}-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/${AppName}-error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>10</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date %logger{60} %M [%thread] %-5level [%file : %line] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 特定过滤含有某字符串的日志 -->
    <!--<appender name="file-str" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<filter class="ch.qos.logback.core.filter.EvaluatorFilter">-->
    <!--<evaluator>-->
    <!--<expression>message.contains("str")</expression>-->
    <!--</evaluator>-->
    <!--<onMatch>ACCEPT</onMatch>-->
    <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
    <!--<file>${LOG_HOME}/${AppName}-contains.log</file>-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--<FileNamePattern>${LOG_HOME}/${AppName}-contains.%d{yyyy-MM-dd}.%i.log</FileNamePattern>-->
    <!--<MaxHistory>30</MaxHistory>-->
    <!--</rollingPolicy>-->
    <!--<encoder>-->
    <!--<pattern>%date %logger{60} %M [%thread] %-5level [%file : %line]  - %msg%n</pattern>-->
    <!--</encoder>-->
    <!--</appender>-->
    <!--  canal日志开始   -->
    <appender name="CANAL-ROOT" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <Key>destination</Key>
            <DefaultValue>canal</DefaultValue>
        </discriminator>
        <sift>
            <appender name="FILE-${destination}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <File>${LOG_HOME}/canal-des.log</File>
                <rollingPolicy
                        class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <!-- rollover daily -->
                    <fileNamePattern>${LOG_HOME}/${destination}/%d{yyyy-MM-dd}/${destination}-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
                    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                        <!-- or whenever the file size reaches 100MB -->
                        <maxFileSize>512MB</maxFileSize>
                    </timeBasedFileNamingAndTriggeringPolicy>
                    <maxHistory>60</maxHistory>
                </rollingPolicy>
                <encoder>
                    <pattern>
                        %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{56}[%L] - %msg%n
                    </pattern>
                </encoder>
            </appender>
        </sift>
    </appender>

    <appender name="ENTRY_LOG" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <Key>destination</Key>
            <DefaultValue>canal</DefaultValue>
        </discriminator>
        <sift>
            <appender name="ENTRY_LOG_${destination}"
                      class="ch.qos.logback.core.rolling.RollingFileAppender">
                <File>${LOG_HOME}/canal-entry.log</File>
                <rollingPolicy
                        class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <!-- rollover daily -->
                    <fileNamePattern>${LOG_HOME}/${destination}/%d{yyyy-MM-dd}/entry-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
                    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                        <maxFileSize>512MB</maxFileSize>
                    </timeBasedFileNamingAndTriggeringPolicy>
                    <maxHistory>60</maxHistory>
                </rollingPolicy>
                <encoder>
                    <pattern>%msg</pattern>
                </encoder>
            </appender>
        </sift>
    </appender>
    <appender name="processorError" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/processor-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/processor-error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>60</maxHistory>
        </rollingPolicy>
        <encoder>
            <Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] [%logger:%line] --%mdc{client} %msg%n</Pattern>
        </encoder>>
    </appender>
    <!--canal日志结束-->

    <logger name="java.sql.Connection">
        <level value="INFO"/>
    </logger>

    <logger name="java.sql.Statement">
        <level value="INFO"/>
    </logger>

    <logger name="com.ibatis">
        <level value="INFO"/>
    </logger>


    <logger name="com.ibatis.common.jdbc.SimpleDataSource">
        <level value="INFO"/>
    </logger>

    <logger name="org.springframework.*">
        <level value="error"/>
    </logger>
    <logger name="com.jd.jmi.order.canal.server.SlaveServer">
        <level value="info"/>
    </logger>

    <logger name="com.alibaba.otter.canal.instance" additivity="false">
        <level value="INFO" />
        <appender-ref ref="CANAL-ROOT" />
    </logger>
    <logger name="com.alibaba.otter.canal.deployer" additivity="false">
        <level value="INFO" />
        <appender-ref ref="CANAL-ROOT" />
    </logger>
    <logger name="com.alibaba.otter.canal.meta.FileMixedMetaManager" additivity="false">
        <level value="INFO" />
        <appender-ref ref="CANAL-ROOT" />
    </logger>


    <logger name="processor" additivity="false">
        <level value="ERROR" />
        <appender-ref ref="processorError"/>
    </logger>

    <root level="error">
        <appender-ref ref="stdout"/>
        <appender-ref ref="file—info-asyn"/>
        <appender-ref ref="file—error"/>
        <appender-ref ref="CANAL-ROOT" />
        <!--<appender-ref ref="file-str"/>-->
        <!--<appender-ref ref="db"/>-->
    </root>
</configuration>